plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    namespace 'dev.lucasnlm.antimine.wear'

    defaultConfig {
        // versionCode and versionName must be hardcoded to support F-droid
        applicationId 'com.batodev.antimine'
        versionCode 1702040
        versionName '17.2.4 W'
        minSdk 25
        targetSdk 35
        compileSdk 35
        multiDexEnabled true
        vectorDrawables.useSupportLibrary true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    signingConfigs {
        release {
            if (System.getenv('IS_RELEASE_BUILD')) {
                storeFile file(System.getenv('KEYSTORE'))
                keyAlias System.getenv('KEY_ALIAS')
                storePassword System.getenv('KEY_STORE_PASSWORD')
                keyPassword System.getenv('KEY_PASSWORD')
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_17
        sourceCompatibility JavaVersion.VERSION_17
    }

    testOptions {
        unitTests {
            includeAndroidResources true
            animationsDisabled true
        }
    }

    buildFeatures {
        viewBinding true
    }
}

kapt {
    correctErrorTypes true
}

dependencies {
    // Dependencies must be hardcoded to support F-droid

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':external')
    implementation project(':common')
    implementation project(':control')
    implementation project(':ui')
    implementation project(':preferences')
    implementation project(':core')
    implementation project(':gdx')
    implementation project(':foss')

    // Wear OS
    implementation 'androidx.wear:wear:1.3.0'

    // AndroidX
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'androidx.recyclerview:recyclerview:1.4.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.activity:activity-ktx:1.10.1'
    implementation 'androidx.fragment:fragment-ktx:1.8.8'

    // Lifecycle
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.9.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.9.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.9.1'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.9.1'

    // Room
    implementation 'androidx.room:room-ktx:2.7.2'

    // Constraint
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'

    // Google
    implementation 'com.google.android.material:material:1.12.0'

    // Koin
    implementation 'io.insert-koin:koin-android:3.5.6'
    testImplementation 'io.insert-koin:koin-test:3.5.6'

    // Kotlin
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.8.1'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:2.1.21'
    implementation 'org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.9.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.8.1'

    // Tests
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.core:core-ktx:1.16.0'
    testImplementation 'androidx.test:core-ktx:1.6.1'
    testImplementation 'androidx.test:rules:1.6.1'
    testImplementation 'androidx.test:runner:1.6.2'
    testImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    testImplementation 'androidx.fragment:fragment-testing:1.8.8'
    testImplementation 'org.robolectric:robolectric:4.12.2'
    testImplementation 'androidx.test.ext:junit:1.2.1'
    testImplementation 'io.mockk:mockk:1.13.11'

    // Core library
    androidTestImplementation 'androidx.test:core:1.6.1'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:core:1.6.1'
    androidTestImplementation 'androidx.test:core-ktx:1.6.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    androidTestImplementation 'androidx.test:runner:1.6.2'
    androidTestImplementation 'androidx.test:rules:1.6.1'
    androidTestUtil 'androidx.test:orchestrator:1.5.1'
}

tasks.withType(Test).configureEach {
    testLogging {
        exceptionFormat 'full'
    }
    afterTest { desc, result ->
        println "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
}
